import asyncio
import random

class Restaurant:
    def __init__(self, num_tables):
        self.tables = asyncio.Semaphore(num_tables)  # ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏ï‡πä‡∏∞
        self.waiting_customers = asyncio.Queue()  # ‡∏Ñ‡∏¥‡∏ß‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏≠‡πÇ‡∏ï‡πä‡∏∞

    async def seat_customer(self, customer_id):
        """‡∏à‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"""
        await self.tables.acquire()
        print(f"ü™ë ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ {customer_id} ‡πÑ‡∏î‡πâ‡πÇ‡∏ï‡πä‡∏∞")
        await self.take_order(customer_id)

    

async def customer_task(customer_id, restaurant):
    """‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô"""
    print(f"üö∂‚Äç‚ôÇ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ {customer_id} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô")
    await restaurant.waiting_customers.put(customer_id)
    await restaurant.seat_customer(customer_id)

async def main():
    num_tables = 3  # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏ï‡πä‡∏∞‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô
    restaurant = Restaurant(num_tables)
    customers = [customer_task(i, restaurant) for i in range(1, 8)]  # ‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ 7 ‡∏Ñ‡∏ô
    
    await asyncio.gather(*customers)
    await restaurant.waiting_customers.join()

if __name__ == "__main__":
    asyncio.run(main())
